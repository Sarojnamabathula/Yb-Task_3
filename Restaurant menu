class MenuItem:
    def __init__(self, name, price, description):
        self.name = name
        self.price = price
        self.description = description

class RestaurantMenu:
    def __init__(self):
        self.menu_items = []
        self.current_order = []

    def add_item(self, item):
        self.menu_items.append(item)

    def remove_item(self, index):
        if 0 <= index < len(self.menu_items):
            del self.menu_items[index]

    def display_menu(self):
        print("Menu:")
        for i, item in enumerate(self.menu_items):
            print(f"{i+1}. {item.name} - ₹{item.price} - {item.description}")

    def add_to_order(self, item_index):
        if 0 <= item_index < len(self.menu_items):
            self.current_order.append(self.menu_items[item_index])
            print(f"{self.menu_items[item_index].name} added to your order.")

    def view_order(self):
        print("Your order:")
        total = 0
        for item in self.current_order:
            print(f"{item.name}: ₹{item.price}")
            total += item.price
        print(f"Total: ₹{total}")

if __name__ == "__main__":
    menu = RestaurantMenu()
    menu.add_item(MenuItem("Biriyani",250.00, "Delicious Biriyani"))
    menu.add_item(MenuItem("Butter Chicken",220.00, "Tasty Chicken"))
    menu.add_item(MenuItem("Cashew Paneer",180.00, "Soft Paneer"))
    menu.add_item(MenuItem("Soft drink",30.00, "Chilled beverage"))
    menu.add_item(MenuItem("Fruit Salad",80.00, "Fresh salad"))

    menu.display_menu()

    while True:
        choice = input("Enter item number to add (or 'q' to quit): ")
        if choice == 'q':
            break
        try:
            item_index = int(choice) - 1
            menu.add_to_order(item_index)
        except ValueError:
            print("Invalid input. Please enter a number or 'q' to quit.")

    menu.view_order()
